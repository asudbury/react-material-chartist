{"version":3,"sources":["features/charts/data/bar/BarChartBiPolar.js","features/charts/data/bar/BarChartDistributedSeries.js","features/charts/data/bar/BarChartLabelPlacement.js","features/charts/data/bar/BarChartMultiLineLabels.js","features/charts/data/bar/BarChartOvelappingBars.js","features/charts/BarChartsConfig.js","features/charts/data/bar/BarChartPeakCircles.js","features/charts/data/bar/BarChartStackedBar.js","features/charts/data/line/LineChartSimple.js","features/charts/data/line/LineChartHolesInData.js","features/charts/data/line/LineChartFilledHolesInData.js","features/charts/data/line/LineChartOnlyWholeNumbers.js","features/charts/data/line/LineChartScatter.js","features/charts/data/line/LineChartWithArea.js","features/charts/data/line/LineChartBiPolarWithAreOnly.js","features/charts/data/line/LineChartAdvancedSmilAnimations.js","features/charts/data/line/LineChartSvgPathAnimation.js","features/charts/data/line/LineChartSmoothing.js","features/charts/data/line/LineChartSeriesOverrides.js","features/charts/LineChartsConfig.js","features/charts/data/line/LineChartTimeSeries.js","features/charts/data/pie/PieChartSimple.js","features/charts/PieChartsConfig.js","features/charts/data/pie/PieChartCustomLabels.js","features/charts/data/pie/PieChartGauge.js","features/charts/data/pie/PieChartAnimatedDonut.js","features/charts/data/pie/PieChartDonutFill.js","features/charts/data/pie/PieChartGaugeFill.js","features/charts/Chart.js","features/charts/ChartsCategory.js","features/charts/Charts.js","App.js","index.js"],"names":["BarChartBiPolar","title","type","data","labels","series","options","high","low","axisX","labelInterpolationFnc","value","index","BarChartDistributedSeries","distributeSeries","BarChartLabelPlacement","position","axisY","BarChartMultiLineLabels","seriesBarDistance","offset","scaleMinSpace","BarChartOverlappingBars","BarChartsConfig","listener","draw","group","append","Chartist","Svg","cx","x2","cy","y2","r","Math","abs","getMultiValue","stackBars","element","attr","style","LineChartSimple","fullWidth","chartPadding","right","LineChartHolesInData","x","y","undefined","LineChartFilledHolesInData","lineSmooth","Interpolation","cardinal","fillHoles","LineChartOnlyWholeNumbers","onlyInteger","times","n","Array","apply","LineChartScatter","map","random","reduce","d","rnd","push","forEach","showLine","LineChartWithArea","showArea","LineChartBiPolarWithAreOnly","showPoint","showLabel","showGrid","seq","delays","durations","LineChartAdvancedSmilAnimations","created","animate","opacity","begin","dur","from","to","axis","easing","x1","pos1Animation","units","pos","pos2Animation","animations","LineChartSvgPathAnimation","path","clone","scale","translate","chartRect","height","stringify","Easing","easeOutQuint","LineChartSmoothing","simple","divisor","LineChartSeriesOverrides","name","step","LineChartsConfig","Date","FixedScaleAxis","moment","format","sum","a","b","PieChartsConfig","round","donut","donutWidth","startAngle","total","pathLength","_node","getTotalLength","animationDefinition","id","fill","donutSolid","Chart","props","chart","Card","variant","CardContent","className","Typography","color","align","gutterBottom","useStyles","makeStyles","root","flexGrow","ChartsCategory","classes","chartsConfig","Grid","container","spacing","item","xs","md","tab","textTransform","Charts","useState","setValue","backgroundColor","TabContext","AppBar","Tabs","onChange","event","newValue","Tab","label","icon","TabPanel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAkBeA,EAlBS,CACtBC,MAAO,uBACPC,KAAM,MACNC,KAAM,CACJC,OAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAC/DC,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAE5CC,QAAS,CACPC,KAAM,GACNC,KAAM,GACNC,MAAO,CACLC,sBADK,SACiBC,EAAOC,GAC3B,OAAOA,EAAQ,IAAM,EAAID,EAAQ,SCA1BE,EAZmB,CAChCZ,MAAO,iCACPC,KAAM,MACNC,KAAM,CACJC,OAAQ,CAAC,KAAM,IAAK,IAAK,IAAK,KAAM,MAAO,QAC3CC,OAAQ,CAAC,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,KAEtCC,QAAS,CACPQ,kBAAkB,ICcPC,EAtBgB,CAC7Bd,MAAO,8BACPC,KAAM,MACNC,KAAM,CACJC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnDC,OAAQ,CACN,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GACpB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAGvBC,QAAS,CACPG,MAAO,CAELO,SAAU,SAEZC,MAAO,CAELD,SAAU,SCcDE,EA/BiB,CAC9BjB,MAAO,gCACPC,KAAM,MACNC,KAAM,CACJC,OAAQ,CACN,4BACA,6BACA,4BACA,8BAEFC,OAAQ,CACN,CAAC,IAAO,IAAO,IAAO,KACtB,CAAC,IAAO,IAAO,IAAO,MACtB,CAAC,IAAM,IAAM,IAAO,OAGxBC,QAAS,CACPa,kBAAmB,GACnBV,MAAO,CACLW,OAAQ,IAEVH,MAAO,CACLG,OAAQ,GACRV,sBAFK,SAEiBC,GACpB,MAAM,GAAN,OAAUA,EAAV,SAEFU,cAAe,MCENC,EA5BiB,CAC9BrB,MAAO,+BACPC,KAAM,MACNC,KAAM,CACJC,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFC,OAAQ,CACN,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GACpC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAGtCC,QAAS,CACPa,kBAAmB,K,gBCNRI,EAVS,CACtBvB,EACAsB,ECR0B,CAC1BrB,MAAO,2BACPC,KAAM,MACNC,KAAM,CACJC,OAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAC/DC,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAE5CC,QAAS,CACPC,KAAM,GACNC,KAAM,GACNC,MAAO,CACLC,sBADK,SACiBC,EAAOC,GAC3B,OAAOA,EAAQ,IAAM,EAAID,EAAQ,QAIvCa,SAAU,CACRC,KADQ,SACHtB,GACe,QAAdA,EAAKD,MACPC,EAAKuB,MAAMC,OACT,IAAIC,IAASC,IACX,SACA,CACEC,GAAI3B,EAAK4B,GACTC,GAAI7B,EAAK8B,GACTC,EAAkD,EAA/CC,KAAKC,IAAIR,IAASS,cAAclC,EAAKQ,QAAc,GAExD,oBDjBVO,EEZyB,CACzBjB,MAAO,0BACPC,KAAM,MACNC,KAAM,CACJC,OAAQ,CAAC,KAAM,KAAM,KAAM,MAC3BC,OAAQ,CACN,CAAC,IAAQ,KAAS,KAAS,MAC3B,CAAC,IAAQ,IAAQ,IAAQ,KACzB,CAAC,IAAQ,IAAQ,IAAQ,OAG7BC,QAAS,CACPgC,WAAW,EACXrB,MAAO,CACLP,sBADK,SACiBC,GACpB,MAAM,GAAN,OAAUA,EAAQ,IAAlB,QAINa,SAAU,CACRC,KADQ,SACHtB,GACe,QAAdA,EAAKD,MACPC,EAAKoC,QAAQC,KAAK,CAChBC,MAAO,0BFTf5B,EACAE,GGIa2B,EAnBS,CACtBzC,MAAO,sBACPC,KAAM,OACNC,KAAM,CACJC,OAAQ,CAAC,SAAU,UAAW,YAAa,WAAY,UACvDC,OAAQ,CACN,CAAC,GAAI,EAAG,EAAG,EAAG,GACd,CAAC,EAAG,EAAG,IAAK,EAAG,GACf,CAAC,EAAG,EAAG,EAAG,EAAG,KAGjBC,QAAS,CACPqC,WAAW,EACXC,aAAc,CACZC,MAAO,MCyBEC,EAvCc,CAC3B7C,MAAO,6BACPC,KAAM,OACNC,KAAM,CACJC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5DC,OAAQ,CACN,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,KAAM,KAAM,KAAM,GAAI,GAAI,EAAG,EAAG,EAAG,GAC1D,CACE,GACA,GACA,KACA,GACA,KACA,GACA,GACA,GACA,KACA,KACA,GACA,KACA,GACA,KACA,KACA,MAEF,CAAC,KAAM,KAAM,KAAM,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,KAAM,MAChE,CACE,CAAE0C,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,OAAGC,GACX,CAAEF,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,MACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,OCkBJE,EAjDoB,CACjCjD,MAAO,oCACPC,KAAM,OACNC,KAAM,CACJC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5DC,OAAQ,CACN,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,KAAM,KAAM,KAAM,GAAI,GAAI,EAAG,EAAG,EAAG,GAC1D,CACE,GACA,GACA,KACA,GACA,KACA,GACA,GACA,GACA,KACA,KACA,GACA,KACA,GACA,KACA,KACA,MAEF,CAAC,KAAM,KAAM,KAAM,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,KAAM,MAChE,CACE,CAAE0C,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,OAAGC,GACX,CAAEF,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,MACX,CAAED,EAAG,EAAGC,EAAG,GACX,CAAED,EAAG,EAAGC,EAAG,MAIjB1C,QAAS,CACPqC,WAAW,EACXC,aAAc,CACZC,MAAO,IAETM,WAAYvB,IAASwB,cAAcC,SAAS,CAC1CC,WAAW,IAEb9C,IAAK,ICxBM+C,EAvBmB,CAChCtD,MAAO,kCACPC,KAAM,OACNC,KAAM,CACJC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9BC,OAAQ,CACN,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GACvB,EAAE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC9B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtB,CAAC,EAAG,EAAG,EAAG,GAAK,EAAG,GAAI,GAAI,KAG9BC,QAAS,CACPC,KAAM,EACNC,KAAM,EACNmC,WAAW,EACX1B,MAAO,CACLuC,aAAa,EACbpC,OAAQ,MClBRqC,EAAQ,SAACC,GAEb,OAAOC,MAAMC,MAAM,KAAM,IAAID,MAAMD,KAkCtBG,EAdU,CACvB5D,MAAO,uBACPC,KAAM,OACNC,KApBWsD,EAAM,IAChBK,IAAI3B,KAAK4B,QACTC,QACC,SAACC,EAAGC,EAAKtD,GAMP,OALAqD,EAAE7D,OAAO+D,KAAKvD,EAAQ,GACtBqD,EAAE5D,OAAO+D,SAAQ,SAAC/D,GAChBA,EAAO8D,KAAqB,IAAhBhC,KAAK4B,aAGZE,IAET,CACE7D,OAAQ,GACRC,OAAQoD,EAAM,GAAGK,KAAI,iBAAM,QAQ/BxD,QAAS,CACP+D,UAAU,EACV5D,MAAO,CACLC,sBADK,SACiBC,EAAOC,GAC3B,OAAOA,EAAQ,KAAO,EAAf,WAAuBD,GAAU,SCjBjC2D,EAbW,CACxBrE,MAAO,qCACPC,KAAM,OACNC,KAAM,CACJC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9BC,OAAQ,CAAC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAEjCC,QAAS,CACPE,IAAK,EACL+D,UAAU,ICiBCC,EA1BqB,CAClCvE,MAAO,uCACPC,KAAM,OACNC,KAAM,CACJC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9BC,OAAQ,CACN,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GACvB,EAAE,GAAI,GAAI,GAAI,GAAI,KAAM,GAAI,GAAI,GAChC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GACxB,CAAC,IAAK,EAAG,EAAG,GAAK,EAAG,IAAM,GAAI,OAGlCC,QAAS,CACPC,KAAM,EACNC,KAAM,EACN+D,UAAU,EACVF,UAAU,EACVI,WAAW,EACX9B,WAAW,EACXlC,MAAO,CACLiE,WAAW,EACXC,UAAU,KCrBZC,EAAM,EACJC,EAAS,GACTC,EAAY,IA6GHC,EA3GyB,CACtC9E,MAAO,wCACPC,KAAM,OACNC,KAAM,CACJC,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,MAClEC,OAAQ,CACN,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAGtCC,QAAS,GACTkB,SAAU,CACRwD,QADQ,WAENJ,EAAM,GAERnD,KAJQ,SAIHtB,GAGH,GAFAyE,GAAO,EAEW,SAAdzE,EAAKD,KACPC,EAAKoC,QAAQ0C,QAAQ,CACnBC,QAAS,CACPC,MAAOP,EAAMC,EAAS,IACtBO,IAAKN,EACLO,KAAM,EACNC,GAAI,UAGH,GAAkB,UAAdnF,EAAKD,MAAkC,MAAdC,EAAKoF,KACvCpF,EAAKoC,QAAQ0C,QAAQ,CACnBjC,EAAG,CACDmC,MAAOP,EAAMC,EACbO,IAAKN,EACLO,KAAMlF,EAAK6C,EAAI,IACfsC,GAAInF,EAAK6C,EACTwC,OAAQ,uBAGP,GAAkB,UAAdrF,EAAKD,MAAkC,MAAdC,EAAKoF,KACvCpF,EAAKoC,QAAQ0C,QAAQ,CACnBlC,EAAG,CACDoC,MAAOP,EAAMC,EACbO,IAAKN,EACLO,KAAMlF,EAAK4C,EAAI,IACfuC,GAAInF,EAAK4C,EACTyC,OAAQ,uBAGP,GAAkB,UAAdrF,EAAKD,KACdC,EAAKoC,QAAQ0C,QAAQ,CACnBQ,GAAI,CACFN,MAAOP,EAAMC,EACbO,IAAKN,EACLO,KAAMlF,EAAK4C,EAAI,GACfuC,GAAInF,EAAK4C,EACTyC,OAAQ,gBAEVzD,GAAI,CACFoD,MAAOP,EAAMC,EACbO,IAAKN,EACLO,KAAMlF,EAAK4C,EAAI,GACfuC,GAAInF,EAAK4C,EACTyC,OAAQ,gBAEVN,QAAS,CACPC,MAAOP,EAAMC,EACbO,IAAKN,EACLO,KAAM,EACNC,GAAI,EACJE,OAAQ,uBAGP,GAAkB,SAAdrF,EAAKD,KAAiB,CAC/B,IAAMwF,EAAgB,CACpBP,MAAOP,EAAMC,EACbO,IAAKN,EACLO,KAAMlF,EAAK,GAAD,OAAIA,EAAKoF,KAAKI,MAAMC,IAApB,MAA8B,GACxCN,GAAInF,EAAK,GAAD,OAAIA,EAAKoF,KAAKI,MAAMC,IAApB,MACRJ,OAAQ,gBAGJK,EAAgB,CACpBV,MAAOP,EAAMC,EACbO,IAAKN,EACLO,KAAMlF,EAAK,GAAD,OAAIA,EAAKoF,KAAKI,MAAMC,IAApB,MAA8B,IACxCN,GAAInF,EAAK,GAAD,OAAIA,EAAKoF,KAAKI,MAAMC,IAApB,MACRJ,OAAQ,gBAGJM,EAAa,GACnBA,EAAW,GAAD,OAAI3F,EAAKoF,KAAKI,MAAMC,IAApB,MAA8BF,EACxCI,EAAW,GAAD,OAAI3F,EAAKoF,KAAKI,MAAMC,IAApB,MAA8BC,EACxCC,EAAWZ,QAAU,CACnBC,MAAOP,EAAMC,EACbO,IAAKN,EACLO,KAAM,EACNC,GAAI,EACJE,OAAQ,gBAGVrF,EAAKoC,QAAQ0C,QAAQa,OCjEdC,EAtCmB,CAChC9F,MAAO,kCACPC,KAAM,OACNC,KAAM,CACJC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5CC,OAAQ,CACN,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAGpBC,QAAS,CACPE,IAAK,EACL+D,UAAU,EACVE,WAAW,EACX9B,WAAW,GAEbnB,SAAU,CACRC,KADQ,SACHtB,GACe,SAAdA,EAAKD,MAAiC,SAAdC,EAAKD,MAC/BC,EAAKoC,QAAQ0C,QAAQ,CACnBhB,EAAG,CACDkB,MAAO,IAAOhF,EAAKS,MACnBwE,IAAK,IACLC,KAAMlF,EAAK6F,KACRC,QACAC,MAAM,EAAG,GACTC,UAAU,EAAGhG,EAAKiG,UAAUC,UAC5BC,YACHhB,GAAInF,EAAK6F,KAAKC,QAAQK,YACtBd,OAAQ5D,IAASC,IAAI0E,OAAOC,mBCRzBC,EAtBY,CACzBxG,MAAO,yBACPC,KAAM,OACNC,KAAM,CACJC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,GACrBC,OAAQ,CACN,CAAC,EAAG,EAAG,GAAI,EAAG,GACd,CAAC,GAAI,GAAI,EAAG,EAAG,KAGnBC,QAAS,CACP6C,WAAYvB,IAASwB,cAAcsD,OAAO,CACxCC,QAAS,IAEXhE,WAAW,EACXC,aAAc,CACZC,MAAO,IAETrC,IAAK,ICmBMoG,EArCkB,CAC/B3G,MAAO,gCACPC,KAAM,OACNC,KAAM,CACJC,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5CC,OAAQ,CACN,CACEwG,KAAM,WACN1G,KAAM,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,IAEjC,CACE0G,KAAM,WACN1G,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE9B,CACE0G,KAAM,WACN1G,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAIlCG,QAAS,CACPqC,WAAW,EACXtC,OAAQ,CACN,WAAY,CACV8C,WAAYvB,IAASwB,cAAc0D,QAErC,WAAY,CACV3D,WAAYvB,IAASwB,cAAcsD,SACnCnC,UAAU,GAEZ,WAAY,CACVE,WAAW,M,iBCLJsC,EAfU,CACvBrE,EACAqC,EACAgB,EACAjD,EACAI,EACAK,EACAM,EACAS,EACAE,EACAiC,EACAG,ECrB0B,CAC1B3G,MAAO,2BACPC,KAAM,OACNC,KAAM,CACJE,OAAQ,CACN,CACEwG,KAAM,WACN1G,KAAM,CACJ,CAAE4C,EAAG,IAAIiE,KAAK,cAAehE,EAAG,IAChC,CAAED,EAAG,IAAIiE,KAAK,cAAehE,EAAG,IAChC,CAAED,EAAG,IAAIiE,KAAK,cAAehE,EAAG,IAChC,CAAED,EAAG,IAAIiE,KAAK,cAAehE,EAAG,IAChC,CAAED,EAAG,IAAIiE,KAAK,cAAehE,EAAG,IAChC,CAAED,EAAG,IAAIiE,KAAK,cAAehE,EAAG,IAChC,CAAED,EAAG,IAAIiE,KAAK,cAAehE,EAAG,IAChC,CAAED,EAAG,IAAIiE,KAAK,cAAehE,EAAG,MAGpC,CACE6D,KAAM,WACN1G,KAAM,CACJ,CAAE4C,EAAG,IAAIiE,KAAK,cAAehE,EAAG,IAChC,CAAED,EAAG,IAAIiE,KAAK,cAAehE,EAAG,IAChC,CAAED,EAAG,IAAIiE,KAAK,cAAehE,EAAG,IAChC,CAAED,EAAG,IAAIiE,KAAK,cAAehE,EAAG,IAChC,CAAED,EAAG,IAAIiE,KAAK,cAAehE,EAAG,QAKxC1C,QAAS,CACPG,MAAO,CACLP,KAAM0B,IAASqF,eACfN,QAAS,EACTjG,sBAHK,SAGiBC,GACpB,OAAOuG,IAAOvG,GAAOwG,OAAO,cCtC9BhH,EAAO,CACXE,OAAQ,CAAC,EAAG,EAAG,IAGX+G,EAAM,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,GCYXC,EATS,CDDD,CACrBtH,MAAO,qBACPC,KAAM,MACNC,KAAM,CACJE,OAAQ,CAAC,EAAG,EAAG,IAEjBC,QAAS,CACPI,sBADO,SACeC,GACpB,MAAM,GAAN,OAAUwB,KAAKqF,MAAO7G,EAAQR,EAAKE,OAAO2D,OAAOoD,GAAQ,KAAzD,QEduB,CAC3BnH,MAAO,4BACPC,KAAM,MACNC,KAAM,CACJC,OAAQ,CAAC,UAAW,SAAU,UAC9BC,OAAQ,CAAC,GAAI,GAAI,KAEnBC,QAAS,CACPI,sBADO,SACeC,GACpB,MAAM,MAAN,OAAaA,MCTG,CACpBV,MAAO,oBACPC,KAAM,MACNC,KAAM,CACJE,OAAQ,CAAC,GAAI,GAAI,GAAI,KAEvBC,QAAS,CACPmH,OAAO,EACPC,WAAY,GACZC,WAAY,IACZC,MAAO,IACPlD,WAAW,ICTe,CAC5BzE,MAAO,6BACPC,KAAM,MACNC,KAAM,CACJE,OAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,IAChCD,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE7BE,QAAS,CACPmH,OAAO,EACP/C,WAAW,GAEblD,SAAU,CACRC,KADQ,SACHtB,GACH,GAAkB,UAAdA,EAAKD,KAAkB,CAEzB,IAAM2H,EAAa1H,EAAKoC,QAAQuF,MAAMC,iBAEtC5H,EAAKoC,QAAQC,KAAK,CAChB,mBAAmB,GAAnB,OAAuBqF,EAAvB,cAAuCA,EAAvC,QAGF,IAAMG,EAAsB,CAC1B,oBAAqB,CACnBC,GAAG,OAAD,OAAS9H,EAAKS,OAChBwE,IAAK,IACLC,KAAK,GAAD,QAAMwC,EAAN,MACJvC,GAAI,MACJE,OAAQ5D,IAASC,IAAI0E,OAAOC,aAE5B0B,KAAM,WAIS,IAAf/H,EAAKS,QACPoH,EAAoB,qBAAqB7C,MAAzC,cACEhF,EAAKS,MAAQ,EADf,SAKFT,EAAKoC,QAAQC,KAAK,CAChB,oBAAoB,GAApB,QAAyBqF,EAAzB,QAGF1H,EAAKoC,QAAQ0C,QAAQ+C,GAAqB,OC7CxB,CACxB/H,MAAO,yBACPC,KAAM,MACNC,KAAM,CAAEE,OAAQ,CAAC,GAAI,GAAI,GAAI,KAC7BC,QAAS,CACPmH,OAAO,EACPC,WAAY,GACZS,YAAY,EACZR,WAAY,IACZjD,WAAW,ICTW,CACxBzE,MAAO,yBACPC,KAAM,MACNC,KAAM,CAAEE,OAAQ,CAAC,GAAI,GAAI,GAAI,KAC7BC,QAAS,CACPmH,OAAO,EACPC,WAAY,GACZS,YAAY,EACZR,WAAY,IACZC,MAAO,IACPlD,WAAW,K,yDC4BA0D,OA9Bf,SAAeC,GAAQ,IACbC,EAAUD,EAAVC,MACR,OACE,cAACC,EAAA,EAAD,CAAMC,QAAQ,YAAd,SACE,eAACC,EAAA,EAAD,WACE,cAAC,KAAD,CACEC,UAAU,0BACVxI,KAAMoI,EAAMpI,KACZC,KAAMmI,EAAMnI,KACZG,QAASgI,EAAMhI,QACfkB,SAAU8G,EAAM9G,WAElB,cAACmH,GAAA,EAAD,CACEC,MAAM,gBACNC,MAAM,SACNL,QAAQ,QACRM,cAAY,EAJd,SAMGR,EAAMrI,cCpBX8I,GAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJC,SAAU,OA2BCC,GAvBQ,SAACd,GACtB,IAAMe,EAAUL,KAERM,EAAiBhB,EAAjBgB,aAER,OACE,qBAAKX,UAAWU,EAAQH,KAAxB,SACE,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACGH,EAAavF,KAAI,SAACwE,GAAD,OAChB,cAACgB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,GAAD,CAAOrB,MAAOA,KADeA,EAAMrI,eCRzC8I,GAAYC,YAAW,CAC3BY,IAAK,CACHC,cAAe,UAmDJC,OA/Cf,WACE,IAAMV,EAAUL,KADA,EAEUgB,mBAAS,QAFnB,mBAETpJ,EAFS,KAEFqJ,EAFE,KAQhB,OACE,qBAAKvH,MAAO,CAAEwH,gBAAiB,aAA/B,SACE,eAACC,EAAA,EAAD,CAAYvJ,MAAOA,EAAnB,UACE,cAACwJ,EAAA,EAAD,CAAQnJ,SAAS,SAAjB,SACE,eAACoJ,EAAA,EAAD,CAAMzJ,MAAOA,EAAO0J,SARP,SAACC,EAAOC,GAC3BP,EAASO,IAOH,UACE,cAACC,EAAA,EAAD,CACE9B,UAAWU,EAAQQ,IACnBa,MAAM,cACN9J,MAAM,OACN+J,KAAM,cAAC,IAAD,MAER,cAACF,EAAA,EAAD,CACE9B,UAAWU,EAAQQ,IACnBa,MAAM,aACN9J,MAAM,MACN+J,KAAM,cAAC,IAAD,MAER,cAACF,EAAA,EAAD,CACE9B,UAAWU,EAAQQ,IACnBa,MAAM,aACN9J,MAAM,MACN+J,KAAM,cAAC,IAAD,WAIZ,cAACC,EAAA,EAAD,CAAUhK,MAAM,OAAhB,SACE,cAAC,GAAD,CAAgB0I,aAActC,MAEhC,cAAC4D,EAAA,EAAD,CAAUhK,MAAM,MAAhB,SACE,cAAC,GAAD,CAAgB0I,aAAc9H,MAEhC,cAACoJ,EAAA,EAAD,CAAUhK,MAAM,MAAhB,SACE,cAAC,GAAD,CAAgB0I,aAAc9B,YCpDzBqD,OAJf,WACE,OAAO,cAAC,GAAD,KCATC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.677bcc14.chunk.js","sourcesContent":["const BarChartBiPolar = {\n  title: 'Bar Chart - Bi Polar',\n  type: 'Bar',\n  data: {\n    labels: ['W1', 'W2', 'W3', 'W4', 'W5', 'W6', 'W7', 'W8', 'W9', 'W10'],\n    series: [[1, 2, 4, 8, 6, -2, -1, -4, -6, -2]]\n  },\n  options: {\n    high: 10,\n    low: -10,\n    axisX: {\n      labelInterpolationFnc(value, index) {\n        return index % 2 === 0 ? value : null;\n      }\n    }\n  }\n};\n\nexport default BarChartBiPolar;\n","const BarChartDistributedSeries = {\n  title: 'Bar Chart - Distributed Series',\n  type: 'Bar',\n  data: {\n    labels: ['XS', 'S', 'M', 'L', 'XL', 'XXL', 'XXXL'],\n    series: [20, 60, 120, 200, 180, 20, 10]\n  },\n  options: {\n    distributeSeries: true\n  }\n};\n\nexport default BarChartDistributedSeries;\n","const BarChartLabelPlacement = {\n  title: 'Bar Chart - Label Placement',\n  type: 'Bar',\n  data: {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [\n      [5, 4, 3, 7, 5, 10, 3],\n      [3, 2, 9, 5, 4, 6, 4]\n    ]\n  },\n  options: {\n    axisX: {\n      // On the x-axis start means top and end means bottom\n      position: 'start'\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      position: 'end'\n    }\n  }\n};\n\nexport default BarChartLabelPlacement;\n","const BarChartMultiLineLabels = {\n  title: 'Bar Chart - Multi Line Labels',\n  type: 'Bar',\n  data: {\n    labels: [\n      'First quarter of the year',\n      'Second quarter of the year',\n      'Third quarter of the year',\n      'Fourth quarter of the year'\n    ],\n    series: [\n      [60000, 40000, 80000, 70000],\n      [40000, 30000, 70000, 65000],\n      [8000, 3000, 10000, 6000]\n    ]\n  },\n  options: {\n    seriesBarDistance: 10,\n    axisX: {\n      offset: 60\n    },\n    axisY: {\n      offset: 80,\n      labelInterpolationFnc(value) {\n        return `${value} CHF`;\n      },\n      scaleMinSpace: 15\n    }\n  }\n};\n\nexport default BarChartMultiLineLabels;\n","const BarChartOverlappingBars = {\n  title: 'Bar Chart - Overlapping Bars',\n  type: 'Bar',\n  data: {\n    labels: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec'\n    ],\n    series: [\n      [5, 4, 3, 7, 5, 10, 3, 4, 8, 10, 6, 8],\n      [3, 2, 9, 5, 4, 6, 4, 6, 7, 8, 7, 4]\n    ]\n  },\n  options: {\n    seriesBarDistance: 10\n  }\n};\n\nexport default BarChartOverlappingBars;\n","import BarChartBiPolar from './data/bar/BarChartBiPolar';\nimport BarChartDistributedSeries from './data/bar/BarChartDistributedSeries';\nimport BarChartLabelPlacement from './data/bar/BarChartLabelPlacement';\nimport BarChartMultiLineLabels from './data/bar/BarChartMultiLineLabels';\nimport BarChartOverlappingBars from './data/bar/BarChartOvelappingBars';\nimport BarChartPeakCircles from './data/bar/BarChartPeakCircles';\nimport BarChartStackedBar from './data/bar/BarChartStackedBar';\n\nconst BarChartsConfig = [\n  BarChartBiPolar,\n  BarChartOverlappingBars,\n  BarChartPeakCircles,\n  BarChartMultiLineLabels,\n  BarChartStackedBar,\n  BarChartDistributedSeries,\n  BarChartLabelPlacement\n];\n\nexport default BarChartsConfig;\n","import Chartist from 'chartist';\n\nconst BarChartPeakCircles = {\n  title: 'Bar Chart - Peak Circles',\n  type: 'Bar',\n  data: {\n    labels: ['W1', 'W2', 'W3', 'W4', 'W5', 'W6', 'W7', 'W8', 'W9', 'W10'],\n    series: [[1, 2, 4, 8, 6, -2, -1, -4, -6, -2]]\n  },\n  options: {\n    high: 10,\n    low: -10,\n    axisX: {\n      labelInterpolationFnc(value, index) {\n        return index % 2 === 0 ? value : null;\n      }\n    }\n  },\n  listener: {\n    draw(data) {\n      if (data.type === 'bar') {\n        data.group.append(\n          new Chartist.Svg(\n            'circle',\n            {\n              cx: data.x2,\n              cy: data.y2,\n              r: Math.abs(Chartist.getMultiValue(data.value)) * 2 + 5\n            },\n            'ct-slice-pie'\n          )\n        );\n      }\n    }\n  }\n};\n\nexport default BarChartPeakCircles;\n","const BarChartStackedBar = {\n  title: 'Bar Chart - Stacked Bar',\n  type: 'Bar',\n  data: {\n    labels: ['Q1', 'Q2', 'Q3', 'Q4'],\n    series: [\n      [800000, 1200000, 1400000, 1300000],\n      [200000, 400000, 500000, 300000],\n      [100000, 200000, 400000, 600000]\n    ]\n  },\n  options: {\n    stackBars: true,\n    axisY: {\n      labelInterpolationFnc(value) {\n        return `${value / 1000}k`;\n      }\n    }\n  },\n  listener: {\n    draw(data) {\n      if (data.type === 'bar') {\n        data.element.attr({\n          style: 'stroke-width: 30px'\n        });\n      }\n    }\n  }\n};\n\nexport default BarChartStackedBar;\n","const LineChartSimple = {\n  title: 'Line Chart - Simple',\n  type: 'Line',\n  data: {\n    labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n    series: [\n      [12, 9, 7, 8, 5],\n      [2, 1, 3.5, 7, 3],\n      [1, 3, 4, 5, 6]\n    ]\n  },\n  options: {\n    fullWidth: true,\n    chartPadding: {\n      right: 40\n    }\n  }\n};\n\nexport default LineChartSimple;\n","const LineChartHolesInData = {\n  title: 'Line Chart - Holes in Data',\n  type: 'Line',\n  data: {\n    labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],\n    series: [\n      [5, 5, 10, 8, 7, 5, 4, null, null, null, 10, 10, 7, 8, 6, 9],\n      [\n        10,\n        15,\n        null,\n        12,\n        null,\n        10,\n        12,\n        15,\n        null,\n        null,\n        12,\n        null,\n        14,\n        null,\n        null,\n        null\n      ],\n      [null, null, null, null, 3, 4, 1, 3, 4, 6, 7, 9, 5, null, null, null],\n      [\n        { x: 3, y: 3 },\n        { x: 4, y: 3 },\n        { x: 5, y: undefined },\n        { x: 6, y: 4 },\n        { x: 7, y: null },\n        { x: 8, y: 4 },\n        { x: 9, y: 4 }\n      ]\n    ]\n  }\n};\n\nexport default LineChartHolesInData;\n","import Chartist from 'chartist';\n\nconst LineChartFilledHolesInData = {\n  title: 'Line Chart - Filled Holes in Data',\n  type: 'Line',\n  data: {\n    labels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],\n    series: [\n      [5, 5, 10, 8, 7, 5, 4, null, null, null, 10, 10, 7, 8, 6, 9],\n      [\n        10,\n        15,\n        null,\n        12,\n        null,\n        10,\n        12,\n        15,\n        null,\n        null,\n        12,\n        null,\n        14,\n        null,\n        null,\n        null\n      ],\n      [null, null, null, null, 3, 4, 1, 3, 4, 6, 7, 9, 5, null, null, null],\n      [\n        { x: 3, y: 3 },\n        { x: 4, y: 3 },\n        { x: 5, y: undefined },\n        { x: 6, y: 4 },\n        { x: 7, y: null },\n        { x: 8, y: 4 },\n        { x: 9, y: 4 }\n      ]\n    ]\n  },\n  options: {\n    fullWidth: true,\n    chartPadding: {\n      right: 10\n    },\n    lineSmooth: Chartist.Interpolation.cardinal({\n      fillHoles: true\n    }),\n    low: 0\n  }\n};\n\nexport default LineChartFilledHolesInData;\n","const LineChartOnlyWholeNumbers = {\n  title: 'Line Chart - Only Whole Numbers',\n  type: 'Line',\n  data: {\n    labels: [1, 2, 3, 4, 5, 6, 7, 8],\n    series: [\n      [1, 2, 3, 1, -2, 0, 1, 0],\n      [-2, -1, -2, -1, -3, -1, -2, -1],\n      [0, 0, 0, 1, 2, 3, 2, 1],\n      [3, 2, 1, 0.5, 1, 0, -1, -3]\n    ]\n  },\n  options: {\n    high: 3,\n    low: -3,\n    fullWidth: true,\n    axisY: {\n      onlyInteger: true,\n      offset: 20\n    }\n  }\n};\n\nexport default LineChartOnlyWholeNumbers;\n","const times = (n) => {\n  // eslint-disable-next-line prefer-spread\n  return Array.apply(null, new Array(n));\n};\n\nconst data = times(52)\n  .map(Math.random)\n  .reduce(\n    (d, rnd, index) => {\n      d.labels.push(index + 1);\n      d.series.forEach((series) => {\n        series.push(Math.random() * 100);\n      });\n\n      return d;\n    },\n    {\n      labels: [],\n      series: times(4).map(() => [])\n    }\n  );\n\nconst LineChartScatter = {\n  title: 'Line Chart - Scatter',\n  type: 'Line',\n  data,\n  options: {\n    showLine: false,\n    axisX: {\n      labelInterpolationFnc(value, index) {\n        return index % 13 === 0 ? `W${value}` : null;\n      }\n    }\n  }\n};\n\nexport default LineChartScatter;\n","const LineChartWithArea = {\n  title: ' Line Chart - With Area Line Chart',\n  type: 'Line',\n  data: {\n    labels: [1, 2, 3, 4, 5, 6, 7, 8],\n    series: [[5, 9, 7, 8, 5, 3, 5, 4]]\n  },\n  options: {\n    low: 0,\n    showArea: true\n  }\n};\n\nexport default LineChartWithArea;\n","const LineChartBiPolarWithAreOnly = {\n  title: 'Line Chart - Bi Polar With Area Only',\n  type: 'Line',\n  data: {\n    labels: [1, 2, 3, 4, 5, 6, 7, 8],\n    series: [\n      [1, 2, 3, 1, -2, 0, 1, 0],\n      [-2, -1, -2, -1, -2.5, -1, -2, -1],\n      [0, 0, 0, 1, 2, 2.5, 2, 1],\n      [2.5, 2, 1, 0.5, 1, 0.5, -1, -2.5]\n    ]\n  },\n  options: {\n    high: 3,\n    low: -3,\n    showArea: true,\n    showLine: false,\n    showPoint: false,\n    fullWidth: true,\n    axisX: {\n      showLabel: false,\n      showGrid: false\n    }\n  }\n};\n\nexport default LineChartBiPolarWithAreOnly;\n","let seq = 0;\nconst delays = 80;\nconst durations = 500;\n\nconst LineChartAdvancedSmilAnimations = {\n  title: 'Line Chart - Advanced Smil Animations',\n  type: 'Line',\n  data: {\n    labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\n    series: [\n      [12, 9, 7, 8, 5, 4, 6, 2, 3, 3, 4, 6],\n      [4, 5, 3, 7, 3, 5, 5, 3, 4, 4, 5, 5],\n      [5, 3, 4, 5, 6, 3, 3, 4, 5, 6, 3, 4],\n      [3, 4, 5, 6, 7, 6, 4, 5, 6, 7, 6, 3]\n    ]\n  },\n  options: {},\n  listener: {\n    created() {\n      seq = 0;\n    },\n    draw(data) {\n      seq += 1;\n\n      if (data.type === 'line') {\n        data.element.animate({\n          opacity: {\n            begin: seq * delays + 1000,\n            dur: durations,\n            from: 0,\n            to: 1\n          }\n        });\n      } else if (data.type === 'label' && data.axis === 'x') {\n        data.element.animate({\n          y: {\n            begin: seq * delays,\n            dur: durations,\n            from: data.y + 100,\n            to: data.y,\n            easing: 'easeOutQuart'\n          }\n        });\n      } else if (data.type === 'label' && data.axis === 'y') {\n        data.element.animate({\n          x: {\n            begin: seq * delays,\n            dur: durations,\n            from: data.x - 100,\n            to: data.x,\n            easing: 'easeOutQuart'\n          }\n        });\n      } else if (data.type === 'point') {\n        data.element.animate({\n          x1: {\n            begin: seq * delays,\n            dur: durations,\n            from: data.x - 10,\n            to: data.x,\n            easing: 'easeOutQuart'\n          },\n          x2: {\n            begin: seq * delays,\n            dur: durations,\n            from: data.x - 10,\n            to: data.x,\n            easing: 'easeOutQuart'\n          },\n          opacity: {\n            begin: seq * delays,\n            dur: durations,\n            from: 0,\n            to: 1,\n            easing: 'easeOutQuart'\n          }\n        });\n      } else if (data.type === 'grid') {\n        const pos1Animation = {\n          begin: seq * delays,\n          dur: durations,\n          from: data[`${data.axis.units.pos}1`] - 30,\n          to: data[`${data.axis.units.pos}1`],\n          easing: 'easeOutQuart'\n        };\n\n        const pos2Animation = {\n          begin: seq * delays,\n          dur: durations,\n          from: data[`${data.axis.units.pos}2`] - 100,\n          to: data[`${data.axis.units.pos}2`],\n          easing: 'easeOutQuart'\n        };\n\n        const animations = {};\n        animations[`${data.axis.units.pos}1`] = pos1Animation;\n        animations[`${data.axis.units.pos}2`] = pos2Animation;\n        animations.opacity = {\n          begin: seq * delays,\n          dur: durations,\n          from: 0,\n          to: 1,\n          easing: 'easeOutQuart'\n        };\n\n        data.element.animate(animations);\n      }\n    }\n  }\n};\n\nexport default LineChartAdvancedSmilAnimations;\n","import Chartist from 'chartist';\n\nconst LineChartSvgPathAnimation = {\n  title: 'Line Chart - SVG Path Animation',\n  type: 'Line',\n  data: {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    series: [\n      [1, 5, 2, 5, 4, 3],\n      [2, 3, 4, 8, 1, 2],\n      [5, 4, 3, 2, 1, 0.5]\n    ]\n  },\n  options: {\n    low: 0,\n    showArea: true,\n    showPoint: false,\n    fullWidth: true\n  },\n  listener: {\n    draw(data) {\n      if (data.type === 'line' || data.type === 'area') {\n        data.element.animate({\n          d: {\n            begin: 2000 * data.index,\n            dur: 2000,\n            from: data.path\n              .clone()\n              .scale(1, 0)\n              .translate(0, data.chartRect.height())\n              .stringify(),\n            to: data.path.clone().stringify(),\n            easing: Chartist.Svg.Easing.easeOutQuint\n          }\n        });\n      }\n    }\n  }\n};\n\nexport default LineChartSvgPathAnimation;\n","import Chartist from 'chartist';\n\nconst LineChartSmoothing = {\n  title: 'Line Chart - Smoothing',\n  type: 'Line',\n  data: {\n    labels: [1, 2, 3, 4, 5],\n    series: [\n      [1, 5, 10, 0, 1],\n      [10, 15, 0, 1, 2]\n    ]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.simple({\n      divisor: 2\n    }),\n    fullWidth: true,\n    chartPadding: {\n      right: 20\n    },\n    low: 0\n  }\n};\n\nexport default LineChartSmoothing;\n","import Chartist from 'chartist';\n\nconst LineChartSeriesOverrides = {\n  title: 'Line Chart - Series Overrides',\n  type: 'Line',\n  data: {\n    labels: ['1', '2', '3', '4', '5', '6', '7', '8'],\n    series: [\n      {\n        name: 'series-1',\n        data: [5, 2, -4, 2, 0, -2, 5, -3]\n      },\n      {\n        name: 'series-2',\n        data: [4, 3, 5, 3, 1, 3, 6, 4]\n      },\n      {\n        name: 'series-3',\n        data: [2, 4, 3, 1, 4, 5, 3, 2]\n      }\n    ]\n  },\n  options: {\n    fullWidth: true,\n    series: {\n      'series-1': {\n        lineSmooth: Chartist.Interpolation.step()\n      },\n      'series-2': {\n        lineSmooth: Chartist.Interpolation.simple(),\n        showArea: true\n      },\n      'series-3': {\n        showPoint: false\n      }\n    }\n  }\n};\n\nexport default LineChartSeriesOverrides;\n","import LineChartSimple from './data/line/LineChartSimple';\nimport LineChartHolesInData from './data/line/LineChartHolesInData';\nimport LineChartFilledHolesInData from './data/line/LineChartFilledHolesInData';\nimport LineChartOnlyWholeNumbers from './data/line/LineChartOnlyWholeNumbers';\nimport LineChartScatter from './data/line/LineChartScatter';\nimport LineChartWithArea from './data/line/LineChartWithArea';\nimport LineChartBiPolarWithAreOnly from './data/line/LineChartBiPolarWithAreOnly';\nimport LineChartAdvancedSmilAnimations from './data/line/LineChartAdvancedSmilAnimations';\nimport LineChartSvgPathAnimation from './data/line/LineChartSvgPathAnimation';\nimport LineChartSmoothing from './data/line/LineChartSmoothing';\nimport LineChartSeriesOverrides from './data/line/LineChartSeriesOverrides';\nimport LineChartTimeSeries from './data/line/LineChartTimeSeries';\n\nconst LineChartsConfig = [\n  LineChartSimple,\n  LineChartAdvancedSmilAnimations,\n  LineChartSvgPathAnimation,\n  LineChartHolesInData,\n  LineChartFilledHolesInData,\n  LineChartOnlyWholeNumbers,\n  LineChartScatter,\n  LineChartWithArea,\n  LineChartBiPolarWithAreOnly,\n  LineChartSmoothing,\n  LineChartSeriesOverrides,\n  LineChartTimeSeries\n];\n\nexport default LineChartsConfig;\n","import Chartist from 'chartist';\nimport moment from 'moment';\n\nconst LineChartTimeSeries = {\n  title: 'Line Chart - Time Series',\n  type: 'Line',\n  data: {\n    series: [\n      {\n        name: 'series-1',\n        data: [\n          { x: new Date(143134652600), y: 53 },\n          { x: new Date(143234652600), y: 40 },\n          { x: new Date(143340052600), y: 45 },\n          { x: new Date(143366652600), y: 40 },\n          { x: new Date(143410652600), y: 20 },\n          { x: new Date(143508652600), y: 32 },\n          { x: new Date(143569652600), y: 18 },\n          { x: new Date(143579652600), y: 11 }\n        ]\n      },\n      {\n        name: 'series-2',\n        data: [\n          { x: new Date(143134652600), y: 53 },\n          { x: new Date(143234652600), y: 35 },\n          { x: new Date(143334652600), y: 30 },\n          { x: new Date(143384652600), y: 30 },\n          { x: new Date(143568652600), y: 10 }\n        ]\n      }\n    ]\n  },\n  options: {\n    axisX: {\n      type: Chartist.FixedScaleAxis,\n      divisor: 5,\n      labelInterpolationFnc(value) {\n        return moment(value).format('MMM D');\n      }\n    }\n  }\n};\n\nexport default LineChartTimeSeries;\n","const data = {\n  series: [5, 3, 4]\n};\n\nconst sum = (a, b) => a + b;\n\nconst PieChartSimple = {\n  title: 'Pie Chart - Simple',\n  type: 'Pie',\n  data: {\n    series: [5, 3, 4]\n  },\n  options: {\n    labelInterpolationFnc(value) {\n      return `${Math.round((value / data.series.reduce(sum)) * 100)}%`;\n    }\n  }\n};\n\nexport default PieChartSimple;\n","import PieChartAnimatedDonut from './data/pie/PieChartAnimatedDonut';\nimport PieChartCustomLabels from './data/pie/PieChartCustomLabels';\nimport PieChartDonutFill from './data/pie/PieChartDonutFill';\nimport PieChartGauge from './data/pie/PieChartGauge';\nimport PieChartGaugeFill from './data/pie/PieChartGaugeFill';\nimport PieChartSimple from './data/pie/PieChartSimple';\n\nconst PieChartsConfig = [\n  PieChartSimple,\n  PieChartCustomLabels,\n  PieChartGauge,\n  PieChartAnimatedDonut,\n  PieChartDonutFill,\n  PieChartGaugeFill\n];\n\nexport default PieChartsConfig;\n","const PieChartCustomLabels = {\n  title: 'Pie Chart - Custom Labels',\n  type: 'Pie',\n  data: {\n    labels: ['Bananas', 'Apples', 'Grapes'],\n    series: [20, 15, 40]\n  },\n  options: {\n    labelInterpolationFnc(value) {\n      return `My ${value}`;\n    }\n  }\n};\n\nexport default PieChartCustomLabels;\n","const PieChartGauge = {\n  title: 'Pie Chart - Gauge',\n  type: 'Pie',\n  data: {\n    series: [20, 10, 30, 40]\n  },\n  options: {\n    donut: true,\n    donutWidth: 60,\n    startAngle: 270,\n    total: 200,\n    showLabel: false\n  }\n};\n\nexport default PieChartGauge;\n","import Chartist from 'chartist';\n\nconst PieChartAnimatedDonut = {\n  title: 'Pie Chart - Animated Donut',\n  type: 'Pie',\n  data: {\n    series: [10, 20, 50, 20, 5, 50, 15],\n    labels: [1, 2, 3, 4, 5, 6, 7]\n  },\n  options: {\n    donut: true,\n    showLabel: false\n  },\n  listener: {\n    draw(data) {\n      if (data.type === 'slice') {\n        // eslint-disable-next-line no-underscore-dangle\n        const pathLength = data.element._node.getTotalLength();\n\n        data.element.attr({\n          'stroke-dasharray': `${pathLength}px ${pathLength}px`\n        });\n\n        const animationDefinition = {\n          'stroke-dashoffset': {\n            id: `anim${data.index}`,\n            dur: 1000,\n            from: `${-pathLength}px`,\n            to: '0px',\n            easing: Chartist.Svg.Easing.easeOutQuint,\n\n            fill: 'freeze'\n          }\n        };\n\n        if (data.index !== 0) {\n          animationDefinition['stroke-dashoffset'].begin = `anim${\n            data.index - 1\n          }.end`;\n        }\n\n        data.element.attr({\n          'stroke-dashoffset': `${-pathLength}px`\n        });\n\n        data.element.animate(animationDefinition, false);\n      }\n    }\n  }\n};\n\nexport default PieChartAnimatedDonut;\n","const PieChartDonutFill = {\n  title: 'Pie Chart - Donut Fill',\n  type: 'Pie',\n  data: { series: [20, 10, 30, 40] },\n  options: {\n    donut: true,\n    donutWidth: 60,\n    donutSolid: true,\n    startAngle: 270,\n    showLabel: true\n  }\n};\n\nexport default PieChartDonutFill;\n","const PieChartGaugeFill = {\n  title: 'Pie Chart - Gauge Fill',\n  type: 'Pie',\n  data: { series: [20, 10, 30, 40] },\n  options: {\n    donut: true,\n    donutWidth: 60,\n    donutSolid: true,\n    startAngle: 270,\n    total: 200,\n    showLabel: true\n  }\n};\n\nexport default PieChartGaugeFill;\n","import React from 'react';\nimport { object } from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport ChartistGraph from 'react-chartist';\nimport Typography from '@material-ui/core/Typography';\nimport './chartist.css';\n\nfunction Chart(props) {\n  const { chart } = props;\n  return (\n    <Card variant=\"elevation\">\n      <CardContent>\n        <ChartistGraph\n          className=\"ct-chart ct-major-sixth\"\n          type={chart.type}\n          data={chart.data}\n          options={chart.options}\n          listener={chart.listener}\n        />\n        <Typography\n          color=\"textSecondary\"\n          align=\"center\"\n          variant=\"body2\"\n          gutterBottom\n        >\n          {chart.title}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nChart.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  chart: object.isRequired\n};\n\nexport default Chart;\n","import React from 'react';\nimport { array } from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1\n  }\n}));\n\nconst ChartsCategory = (props) => {\n  const classes = useStyles();\n\n  const { chartsConfig } = props;\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        {chartsConfig.map((chart) => (\n          <Grid item xs={12} md={6} key={chart.title}>\n            <Chart chart={chart} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nChartsCategory.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  chartsConfig: array.isRequired\n};\n\nexport default ChartsCategory;\n","import React, { useState } from 'react';\nimport { AppBar, Tab, Tabs } from '@material-ui/core';\nimport TabContext from '@material-ui/lab/TabContext';\nimport TabPanel from '@material-ui/lab/TabPanel';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport PieChartIcon from '@material-ui/icons/PieChart';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BarChartsConfig from './BarChartsConfig';\nimport LineChartsConfig from './LineChartsConfig';\nimport PieChartsConfig from './PieChartsConfig';\nimport ChartsCategory from './ChartsCategory';\n\nconst useStyles = makeStyles({\n  tab: {\n    textTransform: 'none'\n  }\n});\n\nfunction Charts() {\n  const classes = useStyles();\n  const [value, setValue] = useState('line');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div style={{ backgroundColor: 'aliceblue' }}>\n      <TabContext value={value}>\n        <AppBar position=\"static\">\n          <Tabs value={value} onChange={handleChange}>\n            <Tab\n              className={classes.tab}\n              label=\"Line Charts\"\n              value=\"line\"\n              icon={<TimelineIcon />}\n            />\n            <Tab\n              className={classes.tab}\n              label=\"Bar Charts\"\n              value=\"bar\"\n              icon={<BarChartIcon />}\n            />\n            <Tab\n              className={classes.tab}\n              label=\"Pie Charts\"\n              value=\"pie\"\n              icon={<PieChartIcon />}\n            />\n          </Tabs>\n        </AppBar>\n        <TabPanel value=\"line\">\n          <ChartsCategory chartsConfig={LineChartsConfig} />\n        </TabPanel>\n        <TabPanel value=\"bar\">\n          <ChartsCategory chartsConfig={BarChartsConfig} />\n        </TabPanel>\n        <TabPanel value=\"pie\">\n          <ChartsCategory chartsConfig={PieChartsConfig} />\n        </TabPanel>\n      </TabContext>\n    </div>\n  );\n}\n\nexport default Charts;\n","import React from 'react';\nimport Charts from './features/charts/Charts';\n\nfunction App() {\n  return <Charts />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}